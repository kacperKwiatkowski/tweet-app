version: '3.9'

services:

  mongo-tweets:
    image: mongo
    container_name: mongo-tweets
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_username
      MONGO_INITDB_ROOT_PASSWORD: mongo_password

  mongo-express-tweets:
    image: mongo-express
    container_name: mongo-express-tweets
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root@root.com
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://mongo_username:mongo_password@mongo-tweets:27017/

  zookeeper-tweets:
    image: bitnami/zookeeper:latest
    container_name: zookeeper-tweets
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    restart: "no"

  kafka-tweets:
    image: bitnami/kafka:latest
    container_name: kafka-tweets
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka-tweets:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-tweets:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    restart: "no"
    depends_on:
      - zookeeper-tweets

  kafdrop-tweets:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop-tweets
    environment:
      KAFKA_BROKERCONNECT: "kafka-tweets:29092"
    ports:
      - "9000:9000"
    restart: "no"
    depends_on:
      - kafka-tweets

#  elasticsearch-tweets:
#    image: elasticsearch:7.12.0
#    container_name: elasticsearch-tweets
#    restart: always
#    volumes:
#      - elasticsearch-data:/usr/share/elasticsearch/data
#    environment:
#      - discovery.type=single-node
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - ELASTIC_USERNAME=elastic
#      - ELASTIC_PASSWORD=changeme
#      - xpack.security.enabled=false
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    ports:
#      - '9200:9200'
#    networks:
#      - elastic-network
#
#  logstash-tweets:
#    image: logstash:7.12.0
#    container_name: logstash-tweets
#    restart: always
#    command: logstash -f /etc/logstash/conf.d/logstash.conf
#    volumes:
#      - ./config:/etc/logstash/conf.d
#    depends_on:
#      - elasticsearch-tweets
#    ports:
#      - '5000:5000'
#    environment:
#      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
#    networks:
#      - elastic-network
#
#  kibana-tweets:
#    image: kibana:7.12.0
#    container_name: kibana-tweets
#    restart: always
#    ports:
#      - '5601:5601'
#    environment:
#      - ELASTICSEARCH_USERNAME=elastic
#      - ELASTICSEARCH_PASSWORD=changeme
#      - ELASTICSEARCH_URL=http://elasticsearch-tweets:9200
#      - ELASTICSEARCH_HOSTS=http://elasticsearch-tweets:9200
#    depends_on:
#      - elasticsearch-tweets
#    networks:
#      - elastic-network

  Elasticsearch:
    image: elasticsearch:7.16.2
    container_name: elasticsearch
    restart: always
    volumes:
      - elastic_data:/usr/share/elasticsearch/data/
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
      ELASTIC_USERNAME: elastic
      ELASTIC_PASSWORD: changeme
      xpack.security.enabled: "false"
    ports:
      - '9200:9200'
    networks:
      - elk

  Logstash:
    image: logstash:7.16.2
    container_name: logstash
    restart: always
    volumes:
      - ./config:/etc/logstash/conf.d
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    depends_on:
      - Elasticsearch
    ports:
      - '5000:5000'
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk

  Kibana:
    image: kibana:7.16.2
    container_name: kibana
    restart: always
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - Elasticsearch
    networks:
      - elk

volumes:
  elastic_data: {}

networks:
  elk:

#volumes:
#  elasticsearch-data:
#    driver: local
#
#networks:
#  elastic-network:
#    driver: bridge